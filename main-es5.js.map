{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/user-settings-form/user-settings-form.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/data/data.service.ts","./src/app/user-settings-form/user-settings-form.component.css","./src/app/user-settings-form/user-settings-form.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-user-settings-form></app-user-settings-form>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2>User Settings</h2>\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"Name\\\">Name</label>\\n      <input id=\\\"name\\\" name=\\\"name\\\" required #nameField=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userSettings.name\\\"\\n        [class.field-error]=\\\"form.submitted && nameField.invalid\\\" (blur)=\\\"onBlur(nameField)\\\" />\\n      <div [hidden]=\\\"!form.submitted || nameField.valid\\\" class=\\\"alert alert-danger\\\">\\n        Enter a name</div>\\n    </div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" name=\\\"singleModel\\\" [(ngModel)]=\\\"singleModel\\\" btnCheckbox\\n      btnCheckboxTrue=\\\"On\\\" btnCheckboxFalse=\\\"Off\\\">\\n      {{singleModel}}\\n    </button>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"startDate\\\">Start Date</label>\\n      <input type=\\\"text\\\" placeholder=\\\"Start Date\\\" [(ngModel)]=\\\"startDate\\\" name=\\\"startDate\\\" id=\\\"startDate\\\" bsDatepicker>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"startTime\\\">Start Time</label>\\n      <timepicker [(ngModel)]=\\\"startTime\\\" name=\\\"startTime\\\"></timepicker>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <rating [(ngModel)]=\\\"userRating\\\" [max]=\\\"maxRating\\\" [readonly]=\\\"isReadonly\\\" name=\\\"userRating\\\" id=\\\"userRating\\\">\\n      </rating>\\n    </div>\\n\\n    <div class=\\\"form-check form-group\\\">\\n      <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"userSettings.emailOffers\\\" type=\\\"checkbox\\\" id=\\\"emailOffers\\\"\\n        name=\\\"emailOffers\\\">\\n      <label class=\\\"form-check-label\\\" for=\\\"emailOffers\\\">Email Special Offers</label>\\n    </div>\\n    <p>User Interface Style</p>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"btn-group\\\">\\n        <label class=\\\"btn btn-primary\\\" name=\\\"interfaceStyle\\\" [(ngModel)]=\\\"userSettings.interfaceStyle\\\" btnRadio=\\\"Light\\\"\\n          tabindex=\\\"0\\\" role=\\\"button\\\">Light</label>\\n        <label class=\\\"btn btn-primary\\\" name=\\\"interfaceStyle\\\" [(ngModel)]=\\\"userSettings.interfaceStyle\\\" btnRadio=\\\"Medium\\\"\\n          tabindex=\\\"0\\\" role=\\\"button\\\">Medium</label>\\n        <label class=\\\"btn btn-primary\\\" name=\\\"interfaceStyle\\\" [(ngModel)]=\\\"userSettings.interfaceStyle\\\" btnRadio=\\\"Dark\\\"\\n          tabindex=\\\"0\\\" role=\\\"button\\\">Dark</label>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"subscriptionType\\\">Subscription Type</label>\\n      <select class=\\\"form-control\\\" name=\\\"subscriptionType\\\" id=\\\"subscriptionType\\\"\\n        [(ngModel)]=\\\"userSettings.subscriptionType\\\">\\n        <option *ngFor=\\\"let type of subscriptionTypes | async\\\">{{type}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"notes\\\">Notes</label>\\n      <textarea id=\\\"notes\\\" [(ngModel)]=\\\"userSettings.notes\\\" name=\\\"notes\\\" class=\\\"form-control\\\" rows=\\\"3\\\"></textarea>\\n    </div>\\n\\n    <div [hidden]=\\\"!postError\\\" class=\\\"alert alert-danger\\\">{{postErrorMessage}}</div>\\n    <button class=\\\"btn btn-primary\\\">Send</button>\\n  </form>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'forms-demo';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { UserSettingsFormComponent } from './user-settings-form/user-settings-form.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { RatingModule } from 'ngx-bootstrap/rating';\n\n@NgModule({\n  declarations: [AppComponent, UserSettingsFormComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    ButtonsModule,\n    BrowserAnimationsModule,\n    BsDatepickerModule.forRoot(),\n    TimepickerModule.forRoot(),\n    RatingModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { UserSettings } from './user-settings';\nimport { Observable, of } from 'rxjs';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  getSubscriptionTypes(): Observable<string[]> {\n    return of(['Monthly', 'Annual', 'Lifetime']);\n  }\n  constructor(private http: HttpClient) {}\n\n  postUserSettingsForm(userSettings: UserSettings): Observable<any> {\n    return this.http.post(\n      'https://putsreq.com/kXQ0Mbph0eig2Zu3F5uP',\n      userSettings\n    );\n    // return of(userSettings);\n  }\n}\n","module.exports = \".field-error {\\r\\n  border: 1px solid red;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1zZXR0aW5ncy1mb3JtL3VzZXItc2V0dGluZ3MtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvdXNlci1zZXR0aW5ncy1mb3JtL3VzZXItc2V0dGluZ3MtZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZpZWxkLWVycm9yIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { UserSettings } from '../data/user-settings';\nimport { NgForm, NgModel } from '@angular/forms';\nimport { DataService } from '../data/data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-user-settings-form',\n  templateUrl: './user-settings-form.component.html',\n  styleUrls: ['./user-settings-form.component.css']\n})\nexport class UserSettingsFormComponent implements OnInit {\n  originalUserSettings: UserSettings = {\n    name: null,\n    emailOffers: null,\n    subscriptionType: null,\n    interfaceStyle: null,\n    notes: null\n  };\n\n  userSettings: UserSettings = { ...this.originalUserSettings };\n  postError = false;\n  postErrorMessage = '';\n  subscriptionTypes = new Observable<string[]>();\n  singleModel = 'On';\n  userRating = 0;\n  maxRating = 10;\n  startDate: Date;\n  startTime: Date;\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.subscriptionTypes = this.dataService.getSubscriptionTypes();\n    this.startDate = new Date();\n    this.startTime = new Date();\n  }\n\n  onSubmit(form: NgForm) {\n    console.log('in on Submit', form.value);\n    if (form.valid) {\n      this.dataService.postUserSettingsForm(this.userSettings).subscribe(\n        result => {\n          return console.log('sucess', result);\n        },\n        error => this.onHttpError(error)\n      );\n    } else {\n      this.postError = true;\n      this.postErrorMessage = 'Please fix the above errors';\n    }\n  }\n\n  onHttpError(errorResponse: any) {\n    console.log('error', errorResponse);\n    this.postError = true;\n    this.postErrorMessage = errorResponse.error.ErrorMessage;\n  }\n  onBlur(field: NgModel) {\n    console.log('in on Blur', field.valid);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}